# joyPendat implementation
# by Marcel Herzberg
#*******************************************************************
# modes
#*******************************************************************
net modeMan <= halui.mode.is-manual
net modeAuto <= halui.mode.is-auto

#*******************************************************************
# change max velocity for joystick by joystick button
#*******************************************************************
setp muxJoyspeed.in0 500
setp muxJoyspeed.in1 3000
net joyButton => muxJoyspeed.sel
net jog-speed <= muxJoyspeed.out #stdnet

#*******************************************************************
# jog axis with joystick
#*******************************************************************
setp halui.axis.jog-deadband 0.1

# set offset for joystick inputs
# result = 0 to +-1 
# offset = analog value in mid position
setp offset.0.offset -1
setp offset.1.offset 0.8
setp offset.2.offset 0.8

net analogInX => offset.0.fb-in
net analogInY => offset.1.fb-in 
net analogInZ => offset.2.fb-in 

# -- X achse --
net jog-x-analog <= offset.0.fb-out #stdnet

# -- Y achse --
net jog-y-analog <= offset.1.fb-out #stdnet

# -- Z achse --
net jog-z-analog <= offset.2.fb-out #stdnet

#*******************************************************************
# select axis with Joystick
#*******************************************************************
setp nearJoyselectX.difference 0.1
setp nearJoyselectY.difference 0.1
setp nearJoyselectZ.difference 0.1

setp nearJoyselectX.in1 0
setp nearJoyselectY.in1 0
setp nearJoyselectZ.in1 0

net jog-x-analog => nearJoyselectX.in2
net jog-y-analog => nearJoyselectY.in2
net jog-z-analog => nearJoyselectZ.in2

net select-by-joyX => XguiORjoy.in1 <= nearJoyselectX.out
net select-by-joyY => YguiORjoy.in1 <= nearJoyselectY.out
net select-by-joyZ => ZguiORjoy.in1 <= nearJoyselectZ.out

# final selection
net axis-select-x <= XguiORjoy.out #stdnet
net axis-select-y <= YguiORjoy.out #stdnet
net axis-select-z <= ZguiORjoy.out #stdnet

#*******************************************************************
# selection of axis by GUI
#*******************************************************************
# axis selection by GUI in v_Buttonlist.hal

net select-by-guiX => XguiORjoy.in0
net select-by-guiY => YguiORjoy.in0
net select-by-guiZ => ZguiORjoy.in0

#*******************************************************************
# selected axis
#*******************************************************************
net axisSelConv => conv-u32-s32.0.in <= halui.axis.selected
net axisSelInt => select8.0.sel <= conv-u32-s32.0.out

net axisSelX => axis.x.jog-enable <= halui.axis.x.is-selected
net axisSelY => axis.y.jog-enable <= halui.axis.y.is-selected
net axisSelZ => axis.z.jog-enable <= halui.axis.z.is-selected
net axisSelC => axis.a.jog-enable <= halui.axis.a.is-selected

#*******************************************************************
# touch off selcted axis with pendant
#*******************************************************************
net touchOff => select8.0.enable
net touchX => halui.mdi-command-00 <= select8.0.out0
net touchY => halui.mdi-command-01 <= select8.0.out1
net touchZ => halui.mdi-command-02 <= select8.0.out2
net touchA => halui.mdi-command-03 <= select8.0.out3

#*******************************************************************
# connect encoder to axis
#*******************************************************************
# jogging #conv todo
net encPpos => conv-float-s32.0.in
net encPposS32 <= conv-float-s32.0.out
net encPposS32 => axis.x.jog-counts axis.y.jog-counts axis.z.jog-counts axis.a.jog-counts

#*******************************************************************
# setup jogging for pendant encoder by GUI
#*******************************************************************
setp nearEncInc.in1 0
setp nearEncInc.difference 0.001
setp muxJogInc.in1 0.002 # default value if "axisui.jog.increment" = 0

net encIncIn => nearEncInc.in2 muxJogInc.in0 # get increment
net encIncSel => muxJogInc.sel <= nearEncInc.out
net encInc => axis.x.jog-scale axis.y.jog-scale axis.z.jog-scale axis.a.jog-scale <= muxJogInc.out

#*******************************************************************
# setup buttons
#*******************************************************************
# green Button
net progIsPaused => tdProgPaused.in <= halui.program.is-paused
setp tdProgPaused.on-delay 2
setp tdProgPaused.off-delay 0
net progPausedDelay <= tdProgPaused.out


net greenButton => b-start-prog.in-00
net modeAuto => b-start-prog.in-01
net machine-is-on => b-start-prog.in-02


net buttonStartProg => halui.program.run <= b-start-prog.and		
net buttonPauseProg => halui.program.pause <= 


# red Button
#net greenButton => dmRedButton.sel-bit-00
#net modeAuto => dmRedButton.sel-bit-01
#net modeMan => dmRedButton.sel-bit-02
#net MDI-mode => dmRedButton.sel-bit-03
#net machine-is-on => dmRedButton.sel-bit-04

#net buttonStopProg => halui.program.stop <= dmRedButton.out-03
#net touchOff <= dmRedButton.out-02
